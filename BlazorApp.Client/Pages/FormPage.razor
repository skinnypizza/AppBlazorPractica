@page "/formpage"
@inject NavigationManager navigationManager
@inject RepresentanteService representanteService
<button @onclick="nuevo" class="btn btn-danger">Agregar</button>
@if (lista != null && lista.Count != 0)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Num_Empl</th>
                <th>Nombre</th>
                <th>Edad</th>
                <th>Cargo</th>
                <th>FechaContrato</th>
                <th>Cuota</th>
                <th>Ventas</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in lista)
            {
                <tr>
                    <td>@item.Num_Empl</td>
                    <td>@item.Nombre</td>
                    <td>@item.Edad</td>
                    <td>@item.Cargo</td>
                    <td>@item.FechaContrato?.ToShortDateString()</td>
                    <td>@item.Cuota</td>
                    <td>@item.Ventas</td>
                    <td>
                        <button class="btn-primary"
                                @onclick = "(()=>recuperarRepresentante(int.Parse(item.Num_Empl)))">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325" />
                            </svg>
                        </button>
                        <button class="btn-danger"
                                @onclick = "(()=>mostrarConfirmacion(int.Parse(item .Num_Empl)))">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                            </svg>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (mostrarModal)
{
    <div class="modal show d-block" tabindex="-1" style="background:rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmación</h5>
                </div>
                <div class="modal-body">
                    <p>¿Seguro que desea eliminar el registro?</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CancelarEliminar">Cancelar</button>
                    <button class="btn btn-danger" @onclick="ConfirmarEliminar">Eliminar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    public List<RepresentanteVentas> lista { get; set; } = new List<RepresentanteVentas>();
    private bool mostrarModal = false;
    private int idEliminar;

    protected override Task OnInitializedAsync()
    {
        lista = representanteService.listarRepresentantes();
        return base.OnInitializedAsync();
    }
    private void nuevo()
    {
        navigationManager.NavigateTo("/formpage/registroRepresentante");
    }
    private void recuperarRepresentante(int Num_Empl)
    {
        navigationManager.NavigateTo("/formpage/editarRepresentante/" + Num_Empl);
    }
    private void mostrarConfirmacion(int Num_Empl)
    {
        idEliminar = Num_Empl;
        mostrarModal = true;
    }
    private void CancelarEliminar()
    {
        mostrarModal = false;
        idEliminar = 0;
    }
    private void ConfirmarEliminar()
    {
        var listaQueda = lista.Where(p => int.Parse(p.Num_Empl) != idEliminar).ToList();
        lista = listaQueda;
        mostrarModal = false;
        idEliminar = 0;
    }
}
